using Plots

# 定义一个结构体来表示点
struct Point
    coords::Vector{Int}  # 多维坐标
    i::Int               # 点的索引
    j::Int               # 操作次数
    k::Int               # 另一个标签
    t::Int               # 是否合并
end

# 定义范围
x_min = -15
x_max = 15

# 初始化点数组
points = []
for i in x_min:x_max
    point = Point([2i, 0], i, 0, 0, 0)
    push!(points, point)
end

# 初始化轨迹数组，并将初始点添加到轨迹中
trajectories = [Point[] for _ in points]
for (index, point) in enumerate(points)
    push!(trajectories[index], point)
end

# 开始模拟过程（有 CFBM）
num_steps = 50  # 模拟步数
for step in 1:num_steps
    x_coords_dict = Dict{Int, Vector{Int}}()
    new_points = []  # 用于存储新创建的点

    for (index, point) in enumerate(points)
        if  point.t == 0 
            random_change = rand([-1, 1])
            new_coords = copy(point.coords)
            new_coords[1] += random_change
            new_coords[2] += 1
            new_point = Point(new_coords, point.i, point.j + 1, point.k, point.t)
            points[index] = new_point

            push!(trajectories[index], new_point)

            
        end
    end

    # 将重合的点合并成一个点
    for (x, indices) in x_coords_dict
        if length(indices) > 1  
            merged_coords = points[indices[1]].coords
            merged_point = Point(merged_coords, points[indices[1]].i, points[indices[1]].j, points[indices[1]].k, 1)
            for index in indices
                points[index] = merged_point
                push!(trajectories[index], merged_point)
            end
            new_point1 = Point(merged_coords, points[indices[1]].i, points[indices[1]].j, points[indices[1]].k, 0)
            push!(new_points, new_point1)
            pop!(new_points, merged_point)
            if haskey(x_coords_dict, new_coords[1])
                push!(x_coords_dict[new_coords[1]], index)
            else
                x_coords_dict[new_coords[1]] = [index]
            end
        end
    end
        
    # 将新点添加到点数组和轨迹数组中
    for new_point1 in new_points
        push!(points, new_point1)
        push!(trajectories, [new_point1])
    end
end

# 提取每个点的轨迹坐标
x_trajectories = [getfield.(trajectory, :coords) for trajectory in trajectories]
x_coords = [getindex.(x_traj, 1) for x_traj in x_trajectories]
y_coords = [getindex.(x_traj, 2) for x_traj in x_trajectories]

# 绘制每个点的轨迹
plot()
for (x, y) in zip(x_coords, y_coords)
    plot!(x, y)
end
title!("Trajectories of Points")
xlabel!("x")
ylabel!("y")
